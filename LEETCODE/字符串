28.实现strstr()
思路https://www.cnblogs.com/grandyang/p/4606696.html
def strStr(self, haystack: str, needle: str) -> int:
        if  needle=="":
            return 0
        start=0
        m=len(haystack)
        n=len(needle)
        for i in range(m-n+1):
            #用h记录已出现子串长度
            h=0
            for j in range(n):
                if needle[j]==haystack[i+j]:
                    h+=1
                else:
                    break
            if h==n:
                return i
        return -1
224.基本计算器
思路https://zhuanlan.zhihu.com/p/80856496
def calculate(self, s: str) -> int:
        res = 0
        stack = []
        #sign表示加上一个负数和正数
        sign = 1
        i = 0
        n = len(s)
        while i < n:
            if s[i] == " ":
                i += 1
            elif s[i] == "-":
                sign = -1
                i += 1
            elif s[i] == "+":
                sign = 1
                i += 1
            elif s[i] == "(":
                stack.append(res)
                stack.append(sign)
                res = 0
                sign = 1
                i += 1
            #当“）”时，对stack里元素（括号外的res）和括号内的res进行计算
            elif s[i] == ")":
                # print(stack)
                res = res * stack.pop() + stack.pop()
                i += 1
            elif s[i].isdigit():
                tmp = int(s[i])
                i += 1
                while i < n and s[i].isdigit():
                    tmp = tmp * 10 + int(s[i])
                    i += 1
                #会对括号之间的所有项进行计算
                res += tmp * sign
        return res
