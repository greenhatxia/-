172阶乘后的零
思路https://zhuanlan.zhihu.com/p/77405853
发现能在末尾形成0，来自因子2和5 ,只要有5，必定有2能与它组合
因此问题简化成一共有几个5
当n =5时候，可以拆出 1个
n=10,拆出2....
但是，这里n = 25,可以拆出6而不是5，是因为 25自身=5*5，有2个5
def trailingZeroes(self, n: int) -> int:
        res = 0
        while n > 0:
            n //= 5
            res += n
        return res
190. 颠倒二进制位
思路https://zhuanlan.zhihu.com/p/37648170
def reverseBits(self, n):
        res=0
        for i in range(32):
            res=res|((n>>i)&1)<<(31-i)
        return res
202.快乐数
https://zhuanlan.zhihu.com/p/78499859按照思路直接写
def isHappy(self, n: int) -> bool:
        n = str(n)
        visited = set()
        while 1:
            n = str(sum(int(i) ** 2 for i in n))
            if n == "1":
                return True
            if n in visited:
                return False
            visited.add(n)
204. 计数质数
思路
https://leetcode-cn.com/problems/count-primes/solution/ji-shu-zhi-shu-bao-li-fa-ji-you-hua-shai-fa-ji-you/
的动图帮助理解
def countPrimes(self, n: int) -> int:
        #假设全为质数
        isPrimes = [1] * n
        res = 0
        for i in range(2, n):
            if isPrimes[i] == 1: res += 1
            j = i
            while i * j < n:
                #质数的倍数都不是质数
                isPrimes[i * j] = 0
                j += 1
        return res
206.反转链表
用一个tmp和pre就解决，直接反转即可
def reverseList(self, head: ListNode) -> ListNode:
        pre=None
        while head:
            tmp=head.next
            head.next=pre
            pre=head
            head=tmp
        return pre
